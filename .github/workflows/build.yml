name: Build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        if: matrix.os != 'ubuntu-latest'
      - name: Installing bun
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: iwr bun.sh/install.ps1|iex
      - name: Install deps using apt
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6
      - uses: aldoborrero/use-nix-action@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Install winget
        if: matrix.os == 'windows-latest'
        uses: Cyberboss/install-winget@v1
      - name: Install deps using winget
        if: matrix.os == 'windows-latest'
        run: |
          winget install --id=UB-Mannheim.TesseractOCR  -e
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun run tauri build

